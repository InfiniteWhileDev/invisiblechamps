{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","styles/globalStyles.js","App.js","About.js","Team.js","Faq.js","Footer.js","Hero.js","reportWebVitals.js","Roadmap.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","styled","div","image","flex","fd","jc","ai","test","p","button","img","a","App","About","className","animateIn","animateOnce","alt","src","Team","Faq","allowZeroExpanded","Footer","href","target","Hero","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Roadmap","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9933b2a5.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  // border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 25px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 280px;\n  font-size: 30px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 30px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 400px;\n  @media (min-width: 767px) {\n    width: 450px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  background-color: var(--accent);\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  });\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"transparent\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n        className=\"hiddens\"\n      >\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test  className=\"hiddens\">\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 0,\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <h1 className=\"mint-info\"> LAUCHING SOON</h1>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 75,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    {/* <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton> */}\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n          \n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n          \n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n        \n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            {/* <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            /> */}\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          {/* <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n              backgroundColor:\"#ccffcfcb\",\n              padding:\"10px\",\n              fontWeight:\"bold\"\n\n            }}\n          > \n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription> */}\n          <s.SpacerSmall />\n          {/* <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n              backgroundColor:\"#ccffcfcb\",\n              fontWeight:\"bold\",\n              padding:\"10px\"\n\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription> */}\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nfunction About() {\n    return (\n        <div className=\"section-about container\">\n\n            <ScrollAnimation animateIn=\"animate__fadeInLeft\" animateOnce={true}>\n\n                <div className=\"features\">\n\n\n                    <div className=\" half-half\" >\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic.png\"}\n                        />\n                    </div>\n\n                    <div className=\" half-half\" >\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic.png\"}\n                        />\n                    </div>\n\n                    <div className=\" half-half\" >\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic.png\"}\n                        />\n                    </div>\n\n                </div>\n\n            </ScrollAnimation>\n\n\n            <ScrollAnimation animateIn=\"animate__fadeInRight\" animateOnce={true}>\n                <div className=\"about\">\n\n                    <div className=\" half-half vert\">\n                        <h3> About</h3>\n                        <h2> It's time to fight the bad</h2>\n\n                        <p>T: Trust - Trust is one of the most important factors for us to make this project succesfull!<br></br><br></br>\n                            A: Work - Even if we complete our roadmap we won't stop working!<br></br><br></br>\n                            C: Curiosity - Our team is working and learning all day, we want to make TAC the best it can be.</p>\n\n                    </div>\n\n                    <div className=\" half-half\" >\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic2.png\"}\n                        />\n                    </div>\n\n                </div>\n\n            </ScrollAnimation>\n\n\n        </div>\n    )\n}\n\nexport default About;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n\nfunction Team() {\n    return (\n        <div className=\"section-team \">\n\n            <div className=\"container\">\n                <h3 className=\"half-half meeth3\"> Meet the team</h3>\n                <h2 className=\"half-half\"> Introducing the  Crew</h2>\n\n\n                <div className=\"team_container\">\n\n                    <div>\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic.png\"}\n                        />\n                        <h3> CEO [Jonny]</h3>\n                    </div>\n\n                    <div>\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic2.png\"}\n                        />\n                        <h3> CEO [Satanswhore]</h3>\n                    </div>\n\n                    <div>\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic3.png\"}\n                        />\n                        <h3> CEO [GUZIEC]</h3>\n                    </div>\n\n                    <div>\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic.png\"}\n                        />\n                        <h3> CEO [Johnny]</h3>\n                    </div>\n\n                    <div>\n                        <img\n                            alt={\" man\"}\n                            src={\"/config/images/ic2.png\"}\n                        />\n                        <h3> CEO [Johnny]</h3>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Team;\n","import React from 'react';\n\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default function Faq() {\n    return (\n\n        <div className=\"section-faq\">\n            <div className=\"container\">\n\n                <h2 className=\"subtitle blacktxt\"> Questions need Answers</h2>\n                <h3 className=\"header blacktxt\"> FAQ </h3>\n\n\n                <Accordion allowZeroExpanded>\n\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n                        <AccordionItem\n\n\n                        >\n                            <AccordionItemHeading className=\"acc-heading\">\n                                <AccordionItemButton>\n                                    What is the Total Supply of the Invisible Champions NFT?\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <p>\n                                    8,888\n\n                                </p>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    </ScrollAnimation>\n\n\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                        <AccordionItem>\n                            <AccordionItemHeading className=\"acc-heading\">\n                                <AccordionItemButton>\n                                    What is the price for one the Invisible Champions NFT?\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <p>\n                                    TBA\n                                </p>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    </ScrollAnimation>\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                        <AccordionItem>\n                            <AccordionItemHeading className=\"acc-heading\">\n                                <AccordionItemButton>\n                                    How do I know if I'm on the Whitelist?\n\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <p>\n                                    You will have a @⚪ Whitelist on your discord profile!\n\n                                </p>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    </ScrollAnimation>\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                        <AccordionItem>\n                            <AccordionItemHeading className=\"acc-heading\">\n                                <AccordionItemButton>\n                                    What day does Invisible Champions Launch?\n\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <p>\n                                    The Whitelist will be Minting on February 26th\n\n                                </p>\n\n                                <p>The Public will be Minting on February 28th</p>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n\n                    </ScrollAnimation>\n\n\n                    {/* <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                    <AccordionItem>\n                        <AccordionItemHeading className=\"acc-heading\">\n                            <AccordionItemButton>\n                                Where can I find Thief Apes on Opensea?\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            <p>\n                                You can find our Collection on <a href=\"https://opensea.com/collections/ThiefApeClub\"> Opensea</a> here!\n                            </p>\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                    </ScrollAnimation> */}\n\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                    <AccordionItem>\n                        <AccordionItemHeading className=\"acc-heading\">\n                            <AccordionItemButton>\n                                How many people will be allowed in the Whitelist Sale?\n\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            <p>\n                                2,500\n\n                            </p>\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                    </ScrollAnimation>\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                    <AccordionItem>\n                        <AccordionItemHeading className=\"acc-heading\">\n                            <AccordionItemButton>\n                                How many Invisible Champions NFTs can I mint in the Whitelist Sale?\n\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            <p>\n                                Up to 3 Mints.\n                            </p>\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                    </ScrollAnimation>\n\n                    <ScrollAnimation animateIn=\"animate__fadeIn\" animateOnce={true}>\n\n                    <AccordionItem>\n                        <AccordionItemHeading className=\"acc-heading\">\n                            <AccordionItemButton>\n                                How many Invisible Champions NFTs can I mint in the Public Sale?\n\n                            </AccordionItemButton>\n                        </AccordionItemHeading>\n                        <AccordionItemPanel>\n                            <p>\n                                Up to 4 Mints\n\n                            </p>\n                        </AccordionItemPanel>\n                    </AccordionItem>\n                    </ScrollAnimation>\n\n\n                </Accordion>\n\n            </div> </div >\n    );\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n\nfunction Footer() {\n    return (\n        <div className=\"section-footer\">\n\n            <div className=\"container\">\n                <h2> Follow us</h2>\n\n                <div className=\"social-icons display--flex\">\n                    <a href=\"https://twitter.com/ThiefApeClub\"> <img\n                        alt={\"Theif man\"}\n                        src={\"/config/images/twitter.svg\"}\n                        target=\"_new\"\n                    /></a>\n\n                    <a href=\"https://discord.gg/Cd7AFkYBmT\">  <img\n                        alt={\"Theif man\"}\n                        src={\"/config/images/discord.svg\"}\n                        target=\"_new\"\n                    /></a>\n\n                    <a href=\"https://opensea.com/collections/ThiefApeClub\"><img\n                        alt={\"Theif man\"}\n                        src={\"/config/images/opensea.svg\"}\n                        target=\"_new\"\n                    /> </a>\n\n                </div>\n\n                <p> &copy; Copyright 2022 . All rights reserved. </p>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Footer;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nfunction Hero() {\n    return (\n        <div className=\"hero\">\n\n            <div className=\"nav container\">\n                <ul className=\"nav-list\">\n                    <li>Invisible Champions </li>\n                    <li> <a href=\"\">Features </a></li>\n                    <li><a href=\"\"> About </a></li>\n                    <li> <a href=\"\">Roadmap </a></li>\n                    <li> <a href=\"\">Team </a></li>\n                    <li> <a href=\"\">Faq </a></li>\n                    <li >   <a href=\"\"> <img\n                        alt={\"\"}\n                        src={\"/config/images/twitter.svg\"}\n                        className=\"logobg\"\n                    /></a></li>\n                    <li >    <a href=\" \" target=\"_new\">  <img\n                        alt={\"\"}\n                        src={\"/config/images/discord.svg\"}\n                        className=\"logobg\"\n                    /></a></li>\n                    <li>  <a href=\"\" target=\"_new\"><img\n                        alt={\"\"}\n                        src={\"/config/images/opensea.svg\"}\n                    /> </a></li>\n                </ul>\n\n            </div>\n\n\n            <div className=\"heroContent\">\n                <h1>  Invisible Champions</h1>\n                <p>  WE ARE THOSE BOYS</p>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Hero;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport \"animate.css/animate.min.css\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { Tabs, TabNav, TabNavItem, TabContent, TabPanel } from 'react-smarttab'\nimport 'react-smarttab/dist/index.css'\n\n\n\nfunction Roadmap() {\n    return (\n        <div className=\"section-roadmap container\">\n\n\n            <h3 className=\"half-half subtitle\"> Follow the journey closely</h3>\n            <h2 className=\"half-half header\"> Roadmap</h2>\n\n\n\n            <div class=\"timeline\">\n                <ScrollAnimation animateIn=\"animate__fadeInUp\">\n                    <div class=\"container-timeline left\">\n\n\n                        <div class=\"content\">\n                            <h3> Phase 1: Invisible Companions Genesis\n\n                            </h3>\n                            <ul>\n                                <li>: Creation of all the art, discord, social medias.</li>\n                                <li>: Building the strongest and most Active community.</li>\n                                <li>: Fill Whitelist through various contests, tasks.</li>\n                                <li>: Expand on marketing, and release Website.</li>\n                                <li>: Sell out.</li>\n                            </ul>\n\n\n\n                        </div>\n                    </div>\n                </ScrollAnimation>\n\n                <ScrollAnimation animateIn=\"animate__fadeInUp\">\n                    <div class=\"container-timeline right\">\n                        <div class=\"content\">\n                            <h3>  Phase 2: Reveal & and Flex\n                            </h3>\n\n\n                            <ul>\n                                <li>: Setup Holders Verification.</li>\n                                <li>: Reveal will occur 24 hours after Sell out.</li>\n                                <li>: Introduce Rarity, Reward Legendary Mints.</li>\n                                <li>: Promote heavily before and after Reveal.</li>\n                                <li>: Ship legendary mints their Physical Infinite Object, and Crax.</li>\n                            </ul>\n                        </div>\n                    </div>\n                </ScrollAnimation>\n\n                <ScrollAnimation animateIn=\"animate__fadeInUp\">\n                    <div class=\"container-timeline left\">\n                        <div class=\"content\">\n                            <h3> Phase 3: Decentraland Purchase & Community Vault\n\n                            </h3>\n                            <ul>\n                                <li>: Purchase $150,000 worth of ETH on Decentraland Land.</li>\n                                <li>: Create Community Vault & Deposit Decentraland Land + $100,000 of ETH.</li>\n                                <li>: Secondary Sales Sent to Community Vault.</li>\n                                <li>: Lock Vault for 1-3 Months (voted on).</li>\n                                <li>: Create Decentraland Wearables (NFT holders airdropped).</li>\n                                <li>: DAO Voting; Community will vote with their NFT's on what to do with Community Vault.</li>\n                                <li>: Begin creating on the most voted entries.</li>\n                                <li>: Execute most voted Entry.</li>\n                            </ul>\n                        </div>\n                    </div>\n                </ScrollAnimation>\n\n                <ScrollAnimation animateIn=\"animate__fadeInUp\">\n                    <div class=\"container-timeline right\">\n                        <div class=\"content\">\n                            <h3> Phase 4: Mutant Champions\n                            </h3>\n                            <ul>\n                                <li>: Create potions/serums to upgrade the Invisible Champion NFT.</li>\n                                <li>: Invisible Champions will be mutated and second NFT will be created. (Mutant Champion).</li>\n                                <li>: Invisible Champion Holders will have first access to Invisible Champion Serums.</li>\n                            </ul>\n                        </div>\n                    </div>\n                </ScrollAnimation>\n\n                <ScrollAnimation animateIn=\"animate__fadeInUp\">\n                    <div class=\"container-timeline left\">\n                        <div class=\"content\">\n                            <h3> Phase 5: TBA\n                            </h3>\n                            <p> Coming Soon</p>\n\n                        </div>\n                    </div>\n                </ScrollAnimation>\n\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default Roadmap;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport About from \"./About\";\nimport Navigation from \"./Navigation\";\nimport Team from \"./Team\";\nimport Faq from \"./Faq\";\nimport Footer from \"./Footer\";\nimport Hero from \"./Hero\";\n\n\n\n\n\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport Roadmap from \"./Roadmap\";\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <Navigation />, */}\n    <Hero />\n\n    {/* <App />, */}\n    <About/>\n    <Team/>\n    <Roadmap/>\n    <Faq/>\n    <Footer/>\n\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}